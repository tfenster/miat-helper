on:
  push:
    tags:
    - 'v*' 

name: Release Client and Service

jobs:
  build:
    name: Upload Release Asset
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: Release the Client
        run: Invoke-Expression "docker run --rm -v $(pwd)\client:c:\app  mcr.microsoft.com/dotnet/core/sdk:3.1-nanoserver-1809 `"c:\app\scripts\release.bat`""

      - name: Release the Service
        run: Invoke-Expression "docker run --rm -v $(pwd)\service:c:\app  mcr.microsoft.com/dotnet/core/sdk:3.1-nanoserver-1809 `"c:\app\scripts\release.bat`""
      
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Client
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./client/publish/client.exe
          asset_name: client.exe
          asset_content_type: application/exe

      - name: Upload Server
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./service/publish/service.exe
          asset_name: service.exe
          asset_content_type: application/exe